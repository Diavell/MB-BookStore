
@{
    ViewData["Title"] = "GetAllOrders";
}
@model PaginatedList<OrderViewModel>

<body style="background-color:antiquewhite">
    <section class="h-100" style="background-color:#FFFFFF; border-radius: 50px;">
        <div class="container h-100 py-5">
            <div class="row">
                <div class="col text-center py-5">
                    <h1 class="text-secondary text-uppercase font-italic common-title">Orders</h1>
                </div>
            </div>
            <div class="form-group">
                <input type="text" class="search form-control" style="border-radius: 20px;" placeholder="What are you looking for?">
            </div>
            <table class="table table-striped results">
                <thead>
                    <tr>
                        <th>
                            ID
                        </th>
                        <th>
                            Created Date
                        </th>
                        <th>
                            Buyer ID
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreatedDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BuyerId)
                            </td>
                            <td>
                                <a asp-controller="Order" asp-action="GetOrderById" asp-route-id="@item.Id" class="btn btn-info rounded-circle custom-btn"><i class="bi bi-gear"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="GetAllOrders" asp-route-pageNumber="@(Model.PageIndex - 1)">Previous</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <a class="page-link" href="#">Previous</a>
                        </li>
                    }

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                            <a class="page-link" asp-action="GetAllOrders" asp-route-pageNumber="@i">@i</a>
                        </li>
                    }

                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="GetAllOrders" asp-route-pageNumber="@(Model.PageIndex + 1)">Next</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <a class="page-link" href="#">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </section>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $(".search").keyup(function () {
                var searchTerm = $(".search").val();
                var listItem = $('.results tbody').children('tr');
                var searchSplit = searchTerm.replace(/ /g, "'):containsi('")

                $.extend($.expr[':'], {
                    'containsi': function (elem, i, match, array) {
                        return (elem.textContent || elem.innerText || '').toLowerCase().indexOf((match[3] || "").toLowerCase()) >= 0;
                    }
                });

                $(".results tbody tr").not(":containsi('" + searchSplit + "')").each(function (e) {
                    $(this).attr('visible', 'false');
                });

                $(".results tbody tr:containsi('" + searchSplit + "')").each(function (e) {
                    $(this).attr('visible', 'true');
                });

                var jobCount = $('.results tbody tr[visible="true"]').length;
                $('.counter').text(jobCount + ' item');

                if (jobCount == '0') { $('.no-result').show(); }
                else { $('.no-result').hide(); }
            });
        });
    </script>
</body>